package edu.caltech.cs141b.hw2.gwt.collab.shared;

import java.io.Serializable;
import java.util.Date;

import javax.jdo.annotations.PersistenceCapable;

import com.google.gwt.user.client.rpc.IsSerializable;

/**
 * Used to contain the entire document along with the locking primitives
 * necessary to modify it.
 */
@PersistenceCapable
public class Document implements IsSerializable {

	private IsSerializable doc;
	
	public Document(UnlockedDocument doc) {
		this.doc = doc;
	}

	public String getKey() throws Exception {
		if(doc instanceof UnlockedDocument)
			return ((UnlockedDocument)doc).getKey();
		else if(doc instanceof LockedDocument)
			return ((LockedDocument)doc).getKey();
		else
			throw new Exception("Document does not point to an " +
					"UnlockedDocument or LockedDocument.");
	}

	public String getTitle() throws Exception {
		if(doc instanceof UnlockedDocument)
			return ((UnlockedDocument)doc).getTitle();
		else if(doc instanceof LockedDocument)
			return ((LockedDocument)doc).getTitle();
		else
			throw new Exception("Document does not point to an " +
					"UnlockedDocument or LockedDocument.");
	}
	
	public void setTitle(String documentTitle) throws Exception {
		if(doc instanceof UnlockedDocument)
			throw new Exception("UnlockedDocuments cannot have their title " +
					"changed.");
		else if(doc instanceof LockedDocument)
			((LockedDocument)doc).setTitle(documentTitle);
		else
			throw new Exception("Document does not point to an " +
					"UnlockedDocument or LockedDocument.");
	}

	public String getContents() throws Exception {
		if(doc instanceof UnlockedDocument)
			return ((UnlockedDocument)doc).getContents();
		else if(doc instanceof LockedDocument)
			return ((LockedDocument)doc).getContents();
		else
			throw new Exception("Document does not point to an " +
					"UnlockedDocument or LockedDocument.");
	}

	public void setContents(String documentContents) {
		if(doc instanceof UnlockedDocument)
			throw new Exception("UnlockedDocuments cannot have their " +
					"contents changed.");
		else if(doc instanceof LockedDocument)
			((LockedDocument)doc).setContents(documentContents);
		else
			throw new Exception("Document does not point to an " +
					"UnlockedDocument or LockedDocument.");
	}

	public String getLockedBy() {
		return lockedBy;
	}

	public Date getLockedUntil() {
		return lockedUntil;
	}
	
	public UnlockedDocument unlock() {
		return new UnlockedDocument(key, title, contents);
	}
}

